% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{pole_migration}
\alias{pole_migration}
\title{Euler pole migration}
\usage{
pole_migration(
  x,
  y,
  steps = c(1, seq(25, 300, 25)),
  infinitesimal = TRUE,
  finite = TRUE
)
}
\arguments{
\item{x, y}{three-column vectors  giving the geographic coordinates latitude
and longitude, and the amount of rotation in degrees for first rotation (\code{x})
and subsequent second rotation (\code{y})}

\item{steps}{numeric vector of time increments. The default is a sequence
from 1 to 10 by an incremental step of 1 (e.g. Myr)}

\item{infinitesimal, finite}{logical. Should the rotation be calculated using
the infinitesimal and/or the finite rotation approach?}
}
\description{
Migration of the relative Euler pole associated with two absolute plate motions
}
\note{
\code{x} is considered to be the "fixed" for the relative motion
between \code{x} and \code{y}
}
\examples{
in.eu <- c(27.12746847, 17.32482497, 0.402388191)
som.eu <- c(22.2078593, -92.40545103, 0.085835298)
pole_migration(som.eu, in.eu)
pole_migration(in.eu, som.eu)

# example from Cox and Hart (1989):
naeu <- c(65.9, 132.4, 0.231)
na <- c(-58.3, 319.3, 0.247)
eu <- c(0.7, 336.8, 0.038)
pole_migration(eu, na, steps = c(1, seq(20, 200, 20))) # dplyr::\%>\% pole_migration_stats(eu, na)
}
\seealso{
\link{pole_migration_stats} for some additional statistics on the pole migration,
\code{\link[=relative_rotation]{relative_rotation()}} for calculating the relative rotation,
\code{\link[=quasi_infinitesimal_euler]{quasi_infinitesimal_euler()}} and \code{\link[=relative_euler_schaeben]{relative_euler_schaeben()}} for quasi-infinitesimal and infinitesimal rotation, respectively.
}
